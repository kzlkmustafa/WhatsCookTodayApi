// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhatsCookTodayApi.Data;

#nullable disable

namespace WhatsCookTodayApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230508142738_deleteSlider")]
    partial class deleteSlider
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WhatsCookTodayApi.MyModels.AIPrompt", b =>
                {
                    b.Property<int>("AIPromptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AIPromptId"));

                    b.Property<string>("AIPromptRecipe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MyPromptId")
                        .HasColumnType("int");

                    b.Property<string>("MyPromptsMaterials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AIPromptId");

                    b.HasIndex("MyPromptId");

                    b.HasIndex("UserId");

                    b.ToTable("AIPrompts");
                });

            modelBuilder.Entity("WhatsCookTodayApi.MyModels.MealOfDay", b =>
                {
                    b.Property<int>("MealOfDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealOfDayId"));

                    b.Property<string>("MealOfDayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealOfDayPhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealOfDayRecipe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealOfDayId");

                    b.ToTable("MealOfDays");
                });

            modelBuilder.Entity("WhatsCookTodayApi.MyModels.MyPrompt", b =>
                {
                    b.Property<int>("MyPromptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MyPromptId"));

                    b.Property<string>("Materials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MyPromptId");

                    b.HasIndex("UserId");

                    b.ToTable("MyPrompts");
                });

            modelBuilder.Entity("WhatsCookTodayApi.MyModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WhatsCookTodayApi.MyModels.AIPrompt", b =>
                {
                    b.HasOne("WhatsCookTodayApi.MyModels.MyPrompt", "MyPrompt")
                        .WithMany("AIPrompts")
                        .HasForeignKey("MyPromptId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WhatsCookTodayApi.MyModels.User", "User")
                        .WithMany("AIPrompts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MyPrompt");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WhatsCookTodayApi.MyModels.MyPrompt", b =>
                {
                    b.HasOne("WhatsCookTodayApi.MyModels.User", "User")
                        .WithMany("MyPrompts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("WhatsCookTodayApi.MyModels.MyPrompt", b =>
                {
                    b.Navigation("AIPrompts");
                });

            modelBuilder.Entity("WhatsCookTodayApi.MyModels.User", b =>
                {
                    b.Navigation("AIPrompts");

                    b.Navigation("MyPrompts");
                });
#pragma warning restore 612, 618
        }
    }
}
